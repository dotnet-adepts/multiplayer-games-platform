@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Zaloguj się";
}
<!-- There are two boxes: sign in with local account and sign in using external service like Google or Facebook

<!-- Box for signin using local account -->
<div class="demo-options mdl-card mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-cell--3-col-tablet mdl-cell--6-col-desktop">
    <div class="mdl-card__supporting-text mdl-color-text--blue-grey-50">
        <section style="color: grey">
            <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                <h4>Użyj lokalnego konta.</h4>
                <hr />
              
                <div asp-validation-summary="All" class="text-danger"></div>
                <ul class="demo-list-item mdl-list">
                    <!-- Email input field -->            
                    <li>
                        <div class="form-group mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                            <label asp-for="Email" class="mdl-textfield__label">Email</label>
                            <input asp-for="Email" class="form-control mdl-textfield__input" type="text" required>
                            <span asp-validation-for="Email" class="text-danger mdl-textfield__error"></span>
                        </div>
                    </li>
                    <!-- Password input field -->
                    <li>
                        <div class="form-group mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                            <label asp-for="Password" class="mdl-textfield__label">Hasło</label>
                            <input asp-for="Password" class="form-control mdl-textfield__input" type="password" required>
                            <span asp-validation-for="Password" class="text-danger mdl-textfield__error"></span>
                        </div>
                    </li>
                </ul>

                <!-- Remember me checkbox input-->
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="RememberMe" class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect">
                            <input asp-for="RememberMe" type="checkbox" class="mdl-checkbox__input" checked>
                            <span class="mdl-checkbox__label">@Html.DisplayNameFor(m => m.RememberMe)</span>
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <!-- Sign in button -->
                    <button type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">
                        Zaloguj
                    </button>
                    <!-- Create new account button -->
                    <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">
                            <i class="material-icons">create</i>
                            Stwórz nowe konto
                        </button>                    
                    </a>
                </div>
            </form>
            
        </section>

        
    </div>
</div>

<!-- Box for signin using google or facebook account -->
<div class="demo-options mdl-card mdl-color--deep-purple mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-cell--3-col-tablet mdl-cell--6-col-desktop">
    <div class="mdl-card__supporting-text mdl-color-text--blue-grey-50">
        <section>
            <h4>Użyj innego konta do zalogowania się.</h4>
            <hr />
            @{
                var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            W tej chwili nie ma możliwości zalogowania się z innego konta.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" name="provider" 
                                            class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" 
                                            value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                        @provider.Name
                                    </button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div></div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
